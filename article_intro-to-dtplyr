# Code for "Intro to dtplyr" Article

# Install the packages
install.packages("dplyr")
install.packages("dtplyr")
install.packages("data.table")
install.packages("tibble")
install.packages("microbenchmark")
install.packages("ggplot2")

# Load the packages
library(dplyr)
library(dtplyr)
library(data.table)
library(tibble)
library(microbenchmark)
library(ggplot2)

# Prepare the dataset

## Load the dataset
data(mtcars)

## Preview the dataset
head(mtcars)

## Create a column for car models and re-arrange the columns
mtcars <- mtcars |>
  mutate(model = rownames(mtcars)) |>
  select(model, everything())

## Drop the row index
rownames(mtcars) <- NULL

## Check the results
View(mtcars)

## Create a data.table version
mtcars_dt <- as.data.table(mtcars)


# dplyr vs data.table: syntax

## dplyr
mtcars |>
  select(model, mpg) |>
  filter(mpg >= 20) |>
  arrange(desc(mpg))

## data.table
mtcars_dt[mpg >= 20, .(model, mpg)][order(-mpg)]


# dyplr vs data.table: speed

## dplyr
dplyr_code <- function() {
  mtcars |>
    select(model, mpg) |>
    filter(mpg >= 20) |>
    arrange(desc(mpg))
}

## data.table
data_table_code <- function() {
  mtcars_dt[mpg >= 20, .(model, mpg)][order(-mpg)]
}

## Compare speed
result <- microbenchmark(
  dplyr = dplyr_code(),
  data_table = data_table_code(),
  times = 100
)

print(result)

## Visualise the results

### Convert the results to data frame
result_df <- as.data.frame(result)

str(result_df)

### Visualise
ggplot(result_df,
       aes(x = expr,
           y = time,
           fill = expr)) +
  geom_col(alpha = 0.6) +
  coord_flip() +
  scale_y_continuous(trans = "log10") +
  labs(title = "Speed Test: dplyr vs data.table",
       x = "Code",
       y = "Execution Time (microseconds)") +
  theme_light()